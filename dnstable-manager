#!/usr/bin/python

import argparse
import logging
import os

from dnstable_manager.download import DownloadManager
from dnstable_manager import DNSTableManager, get_config
import dnstable_manager.rsync

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--config')
    parser.add_argument('--verbosity', '-v', action='count')
    args = parser.parse_args()

    logger = logging.getLogger()

    if not args.verbosity:
        logger.setLevel(logging.ERROR)
    elif args.verbosity == 1:
        logger.setLevel(logging.WARNING)
    elif args.verbosity == 2:
        logger.setLevel(logging.INFO)
    else:
        logger.setLevel(logging.DEBUG)

    config = get_config(filename=args.config)

    dnstable_manager.rsync.install(rsync_rsh=config['downloader']['rsync_rsh'])
    os.putenv('TMPDIR', config['downloader']['tempdir'])
    download_manager = DownloadManager(
            max_downloads=config['downloader']['max_downloads'],
            retry_timeout=config['downloader']['retry_timeout'])

    fileset_managers = dict()

    for fileset,fileset_config in config['filesets'].items():
        manager = DNSTableManager(
                fileset_uri=fileset_config['uri'],
                destination=fileset_config['destination'],
                base=fileset_config['base'],
                extension=fileset_config['extension'],
                frequency=fileset_config['frequency'],
                download_manager = download_manager)
        fileset_managers[fileset] = manager
        manager.start()

    download_manager.start()

    for manager in fileset_managers.values():
        manager.join()

    download_manager.join()

if __name__ == '__main__':
    main()
